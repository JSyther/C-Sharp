 TryGetValue() is a method that is part of the Dictionary class in C#.
 This method allows you to retrieve the value associated with a particular key in a Dictionary object,
 without the risk of throwing an exception if the key is not present.
 
 A Dictionary is a collection that stores key-value pairs. 
 Each key in the Dictionary must be unique, and you can use the key to retrieve the associated value.
 The TryGetValue() method allows you to retrieve the value associated with a particular key, without the risk of throwing an exception if the key is not present.
 
 
 
 Here's an example of how to use the TryGetValue() method:
-----------------------------------------------------------------------------------------
using System.Collections.Generic;
using UnityEngine;

public class Example : MonoBehaviour
{
    Dictionary<string, int> myDict = new Dictionary<string, int>();

    void Start()
    {
        myDict.Add("apple", 1);
        myDict.Add("banana", 2);
        myDict.Add("orange", 3);

        int value;
        if (myDict.TryGetValue("banana", out value))
        {
            Debug.Log("The value associated with 'banana' is " + value);
        }
        else
        {
            Debug.Log("Dictionary does not contain the key 'banana'");
        }

        if (myDict.TryGetValue("pear", out value))
        {
            Debug.Log("The value associated with 'pear' is " + value);
        }
        else
        {
            Debug.Log("Dictionary does not contain the key 'pear'");
        }
    }
}
-----------------------------------------------------------------------------------------

In this example, we create a Dictionary object called myDict that maps string keys to int values.
We then add three key-value pairs to the dictionary.

We can use the TryGetValue() method to retrieve the value associated with a particular key. 
In this case, we check the values associated with the keys "banana" and "pear".
If the dictionary contains the key, we output the value associated with the key.
If the dictionary does not contain the key, we output a message indicating that the key is not present.



In this example, the output of the program would be:
--------------------------------------------------------
The value associated with 'banana' is 2
Dictionary does not contain the key 'pear'
--------------------------------------------------------
This is because the dictionary contains the key "banana", with a value of 2, but does not contain the key "pear".
By using TryGetValue(), we can check whether a dictionary contains a particular key before attempting to retrieve the associated value,
and handle the case where the key is not present without causing an exception.




