Matrix movie's screen
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace ReverseA
{
    class MatrixScreen
    {
        static void Main(string[] args)
        {
            Console.ForegroundColor = ConsoleColor.Green;
            
            //Also possible to reverse color of the visual console with the below commands
            //Console.ForegroundColor = ConsoleColor.Black;
            //Console.BackgroundColor= ConsoleColor.Green;

            Random random = new Random();

            String str = "";

            Console.Write("Press Any Key to (Un)Reality...");
            Console.ReadKey();


            // loop for display string patterns
            for (int i = 0; i < 60000; i++)
            {
                //create new string pattern
                if (i % 2 == 0)
                {
                    str = "";
                    for(int k = 0; k < 79; k++)
                    {
                        int matrix = random.Next(5);
                        if(matrix < 2)
                        {
                            str += matrix.ToString();
                        }
                        else
                        {
                            str += " ";
                        }
                    }
                }

                //print "str" pattern
                Console.WriteLine(str);
            }
            // End the loop 
            Console.WriteLine("Welcome to reality");
            Console.Write("Press any key to 'EXIT'");
            Console.ReadKey();
        }
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


#Basic loop examples.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace ReverseA
{
    class Examples
    {
        static void Main(string[] args)
        {
            int[] numberCounts = { 4, 8, 15, 16, 23, 42 };  // determined an array with six different numbers
            
            for (int i = 0; i < numberCounts.Length; i++)  // The "i" value will be incremented by the number in the specified numberCounts array's value.
            {
                Console.WriteLine(numberCounts[i]);        // Output = ((i = 6)= 6 line)) =  shows =(4, 8, 15, 16, 23, 42)
            }
            Console.ReadLine();
        }
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
#CalculatePower

namespace ReverseA
{
    class calculatePower
    {
        static void Main(string[] args)
        {
            Console.WriteLine(GetPower(5,12));      // Given a value for calculating numbers within the method.
            Console.ReadLine();
        }


        static int GetPower(int baseNumber, int powerNumber)  // The method's inside got two parameters, which we've determined.
        {
            int result = 1;                                   // It can work for only positive numbers. and result base on positive one.

    for (int i = 0; i < powerNumber; i++)             // After we assign what is the value of powerNumber, it will increment "i" while reaching to the determined value
            {
                result = result * baseNumber;        // total result = augmented result multiple with determined basenumber;
            }

            return result;                          // then, the whole progress will return as result;
        }
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



A simple guess game in C# where the user has 5 chances to guess a specific string value, and if they fail, they are given 5 more chances with different messages
for each failure:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

using System;

class GuessGame
{
    static void Main(string[] args)
    {
        string[] messages = new string[] { "Tryagain", "Wrong answer", "Incorrect.", "Not quite.", "Keep trying." };
        string correctAnswer = "Hello";
        int chances = 0;
        Random rand = new Random();

        while(chances < 10)
        {
            if(chances < 5)
            {
                Console.WriteLine("Make a guess:");
                string guess = Console.ReadLine();
                if(guess == correctAnswer)
                {
                    Console.WriteLine("Congratulations! You got it right");
                    break;
                }
                else
                {
                    Console.WriteLine(messages[chances % 5]);
                    chances++;
                }
            }
            else
            {
                if (chances == 5)
                {
                    Console.WriteLine("You have failed 5 times. Here is your next 5 chances");
                }
                Console.WriteLine("Make a guess");
                string guess = Console.ReadLine(); 

                if(guess == correctAnswer)
                {
                    Console.WriteLine("Congratulations! You got it right.");
                    break;
                }
                else
                {
                    Console.WriteLine(messages[chances % 5]);
                    chances++;
                }
            }
        }

        if(chances == 10)
        {
            Console.WriteLine("Sorry, you have exceeded the number of allowed guesses. Better luck next time!");
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
This code uses a while loop to give the user 10 chances to guess the correct string. Within the loop, it uses an if-else statement to check if the
current number of chances is less than 5. If it is, it prompts the user to make a guess and compares it to the correct answer.
If the guess is correct, the loop breaks and a message is displayed. If the guess is incorrect, the code prints out a message from the messages array
and increments the chances variable. If the number of chances is greater than or equal to 5, it will give the user 5 more chance with different message.

How to build it step by step. => Below
------------------------------------------------------------------------------------------------------------------------------------------------------------------
using System;

class GuessGame
{
    static void Main(string[] args)
    {
         // One of the 5 string values that will be given random after wrong entries
         string[] messages = new string[] { "Tryagain", "Wrong answer", "Incorrect.", "Not quite.", "Keep trying." };  
         string correctAnswer = "Hello";  // this example is our correct answer
         int chances = 0;         // It starts with 0 and then increments with falses.
         Random rand = new Random();  // This value will then provide a random output of the string values we have prepared for the wrong answers.
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
using System;

class GuessGame
{
    static void Main(string[] args)
    {
         string[] messages = new string[] { "Tryagain", "Wrong answer", "Incorrect.", "Not quite.", "Keep trying." };
         string correctAnswer = "Hello";
         int chances = 0;
         Random rand = new Random();         
         while(chances <10)     //While true game will run
         {
            TODO: Gameplay
         }
         
         if(chances == 10)    //if it is true (chances are equal to 10) game is lose 
         {
            Console.WriteLine("Sorry, you have exceeded the number of allowed guesses. Better luck next time");  //If so, the game is completely over.
         }         
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------

using System;

class GuessGame
{
    static void Main(string[] args)
    {
         string[] messages = new string[] { "Tryagain", "Wrong answer", "Incorrect.", "Not quite.", "Keep trying." };
         string correctAnswer = "Hello";
         int chances = 0;
         Random rand = new Random();        
         while(chances <10)     //While true game will run
         {
            if(chances <5) //As we mentioned before, we will once again grant chances after 5 rights.
            {
                Console.WriteLine("Make a guess:")   // First of all, everything has to start with the first question.
                string guess = Console.ReadLine();   // The input entered by the user from the keyboard will be processed here.
                if(guess == correctAnswer)           // if user's guess is match with correctAnswer("Hello")
                {
                    Console.WriteLine("Congratulations! You got it right"); // Then we can say to the user, the answer is correct.
                    break;                          // break stops the whole while loop if the operation here is true.
                }             
            }
         }
         
         if(chances == 10)    //if it is true (chances are equal to 10) game is lose 
         {
            Console.WriteLine("Sorry, you have exceeded the number of allowed guesses. Better luck next time");  //If so, the game is completely over.
         }         
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
using System;

class GuessGame
{
    static void Main(string[] args)
    {
         string[] messages = new string[] { "Tryagain", "Wrong answer", "Incorrect.", "Not quite.", "Keep trying." };
         string correctAnswer = "Hello";
         int chances = 0;
         Random rand = new Random();
         while(chances <10)     
         {
            if(chances <5) 
            {
                Console.WriteLine("Make a guess:")  
                string guess = Console.ReadLine();   
                if(guess == correctAnswer)         
                {
                    Console.WriteLine("Congratulations! You got it right"); 
                    break;                          
                }
                else    // if input's are not correct and chances are still less than 5 
                {
                    int index = rand.Next(0,5); // it returns random integer between 0 to 5
                    Console.WriteLine(messages[index]); // we determine index(0to5) in here as a array value
                    chances++;
                } 
            }
         }
         
         if(chances == 10)    
         {
            Console.WriteLine("Sorry, you have exceeded the number of allowed guesses. Better luck next time"); 
         }         
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
using System;

class GuessGame
{
    static void Main(string[] args)
    {
         string[] messages = new string[] { "Tryagain", "Wrong answer", "Incorrect.", "Not quite.", "Keep trying." };
         string correctAnswer = "Hello";
         int chances = 0;
         Random rand = new Random();
         while(chances <10)     
         {
            if(chances <5) 
            {
                Console.WriteLine("Make a guess:")  
                string guess = Console.ReadLine();   
                if(guess == correctAnswer)         
                {
                    Console.WriteLine("Congratulations! You got it right"); 
                    break;                          
                }
                else    
                {
                    int index = rand.Next(0,5); 
                    Console.WriteLine(messages[index]);
                    chances++;
                } 
            }
         }
         else       // Now second part of game, after to 5 incorrect answers
         {
            if(chances ==5)
            {
               Console.WriteLine("You have failed 5 times. Here is your next 5 chances"); // This is then added to avoid being spammed over and over again.
            } 
               Console.WriteLine("Make a guess");
               string guess = Console.ReadLine(); 
            if(guess == correctAnswer)    // Again same structure as above
            {
               Console.WriteLine("Congratulations! You got it right.");
               break;       // if correct break;
            }
            else
            {
                int index = rand.Next(0, 5);
                Console.WriteLine(messages[index]);
                chances++;
            }            
         }                  
         if(chances == 10)    
         {
            Console.WriteLine("Sorry, you have exceeded the number of allowed guesses. Better luck next time"); 
         }         
    }
}


// Guessgame #end



----------------------------------------------------------------------------------------------------------------------------------------------------------------

#Basic Calculator


class Calculator
{
    static void Main(string[] args)
    {
        string exit = "exit";

        Console.WriteLine("Enter the first number:");
        double num1 = double.Parse(Console.ReadLine());

        Console.WriteLine("Enter the second number:");
        double num2 = double.Parse(Console.ReadLine());

        Console.WriteLine("Enter the operator (+, -, *, /):");
        string op = Console.ReadLine();

        while (exit == op)
        {
            switch (op)
            {
                case "+":
                    Console.WriteLine(num1 + num2);
                    break;
                case "-":
                    Console.WriteLine(num1 - num2);
                    break;
                case "*":
                    Console.WriteLine(num1 * num2);
                    break;
                case "/":
                    Console.WriteLine(num1 / num2);
                    break;

                default:
                    Console.WriteLine("Invalid operator");
                    break;
            }
        }
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------

#2D Array Examples:

namespace ReverseA
{
    class TwoDArray
    {
        static void Main(string[] args)
        {
            int[,] numberGrid =                     // "," means that there will be arrays of arrays in different clusters.
            {
                {1,2 },                             // 3 different array clusters were determined.
                {3,4 },
                {5,6 }
            };

            Console.WriteLine(numberGrid[0,0]);     // It will output the result showing the first array's first parameter.
            Console.ReadLine();                     // if you try to change and array's "numberGrid[2,1]", output = "5"
        }                   
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Here another example of 2DArray with forloop.

namespace ReverseA
{
    class TwoDArray
    {
        static void Main(string[] args)
        {
            int[,] numberGrids = new int[3, 3] { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };

            for (int i = 0; i < 3; i++)
            {
                for (int j = 0; j < 3; j++)
                {
                    Console.Write(numberGrids[i, j] + " ");
                }
                Console.WriteLine();
            }
        }
    }
}
////////////////////////////////////
Output = ////////   1 2 3   ////////
/////////////////   4 5 6   ////////
/////////////////   7 8 9   ////////
////////////////////////////////////
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
